<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!--<module name="JavadocPackage"/>-->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <module name="TreeWalker">
        <!-- All methods need documentation -->
        <module name="JavadocMethod">
            <property name="allowUndeclaredRTE" value="true"/>
        </module>

        <!-- Member variables need to start with an underscore '_'  -->
        <module name="MemberName">
            <property name="format" value="^_[a-zA-Z0-9_]*$"/>
        </module>

        <!-- Static variables need to start with a capital letter -->
        <module name="StaticVariableName">
            <property name="format" value="^[A-Z][a-zA-Z0-9_]*$"/>
        </module>

        <!-- Abstract Classes need to start with an A or end with Factory. -->
        <module name="AbstractClassName">
            <property name="format" value="^A.*$|^.*Factory$"/>
        </module>

        <!-- Constants (static final) need to start with a capital letter. -->
        <module name="ConstantName">
            <property name="format" value="^[A-Z][a-zA-Z0-9_]*$"/>
        </module>

        <!-- Every switch statement needs a default ... -->
        <module name="MissingSwitchDefault"/>

        <!-- The default must be the last statement in a switch -->
        <module name="DefaultComesLast"/>

        <!-- Left curly has to be on the same line for the given conditions -->
        <module name="LeftCurly">
            <property name="tokens" value="LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR,
                                           LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE"/>
        </module>

        <!-- If statements need braces ... bob's your uncle -->
        <module name="NeedBraces"/>

        <!-- Proper whitespace -->
        <module name="WhitespaceAround">
            <property name="tokens" value="LCURLY, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
                                           LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
                                           LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, SLIST"/>
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
        </module>

    </module>

</module>

This is an unorganized collection of random notes and comments as I develop this library.

Notes:
------
+ I'm still learning the maven structure so right now the SchedulerDemo is embedded in the library
  which I would really prefer to pull out and into its own area.

+ I've decided to use Joda as a replacement for the Java Date libraries as I find the java date stuff
  unnecessarily complicated to use and I would rather spend my time understanding higher level concepts.

+ If at all possible I'm trying to not use temporary lists in the API.  In other words, rather
  than asking for a list of appointments on a given day, the API instead asks the called method
  to visit a visitor with each appointment for a given day.  The implementations may have temporary
  lists, but this can possibly be later optimized out.

+ I'm going to make a sincere attempt to not use abbreviations in any API names or really any abbreviations in
  the code at all.  'ID' is okay, but just about everything else ends up only making things more confusing.

+ I am not going to spend a lot of time polishing the demo.  For example, I think having a dialog box pull up a
  dialog box for a color picker seems silly.  But the JColorChooser is too large to try to embed directly so
  for now it stays a pop-up dialog, which I don't like and a "real" application would probably want to do
  something fancier.

+ Unassigned appointments, or those appointments which are for resources not available on that
  day default to column 0.  There is always a column 0 so we are sure the appointment will
  not be lost.  For version 2.0 perhaps these will instead default to an auto-created unassigned
  column.  The problem with this is that the layout can't automatically create a column since it
  can't create the component for the header.  So the caller needs to do this .. which means that
  the caller would have to say "layout, here is a resource to assign all unassigned appointments
  to".  This is probably the best approach, but for now a default to column 0 is probably okay.


Known Restrictions:
-------------------
+ Appointments can not be scheduled in increments finer than seconds.  Seriously, seconds might be
  excessive as I can't think of anyone who has ever scheduled anything in real life (not on a
  computer) at a particular second.

+ Appointments can not span multiple days.  This would probably be a nice feature some day but I'm not
  even planning for it now.

+ If a resource is scheduled more than once on any given day it will appear in two columns.


To-do Before Release:
---------------------
+ Add click, double click, and context click to the demo for appointments and resources.

+ Allow inserting of resources and not just add.

+ Enable printing, even if it is a simple scaling of the inner panel.

+ Documentation and Tutorial


Version 2.0 Features:
---------------------
+ Drag and Drop of appointments to move them around in a day, or across schedules.

+ Add week view.  This would allow dragging appointments around and resources around on given days.

+ Add month view.  This would convey information about what resources where scheduled to be available
  on which days.  For each resource it might be nice to show percentage of availability.  Like resource
  1 is 50% booked on the 5th of November.

+ Allow per-resource scheduling in the day.  In other words, resource 1 could be available
  from 8am - 1pm and resource 2 from 12pm - 5pm.

+ Related to the last feature, it might be nice to be able to block out portions of the day.
  Like simply say lunch is from 12-1 ... always, so block it out.

+ Optimizes changes triggered from the model.  Right now nearly every update simply triggers a complete
  redraw of the layout.

+ Make the appointments and resources look better.  I would sort of like the appointments to look like
  the ones in Google Calendar.  Another goal is for the header color to actual color the entire background
  for that column, but very lightly.  The reason for this is so when you are in a calendar or week view
  you can easily tell which resources have been assigned for which days.

+ Make printing look nice.  For 1.0 it will likely be just a simple scaling of the panel, but for 2.0 it
  would be best to really make it render specifically for the printer.

+ I have some round-off errors which are making some of the appointments one pixel to small on the
  width.  Eventually I should fix this so things look better.
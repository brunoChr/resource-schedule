This is an unorganized collection of random notes and comments as I develop this library.

Notes:
------
1. I'm still learning the maven structure so right now the SchedulerDemo is embedded in the library
   which I would really prefer to pull out and into its own area.

2. I've decided to use Joda as a replacement for the Java Date libraries as I find the java date stuff
   unnecessarily complicated to use and I would rather spend my time understanding higher level concepts.

3. For now, almost all changes sent to the Model trigger a complete redraw of the layout.  I need to first
   get it all working before I start worrying about how I can optimize the drawing.

4. If at all possible I'm trying to not use temporary lists in the API.  In other words, rather
   than asking for a list of appointments on a given day, the API instead asks the called method
   to visit a visitor with each appointment for a given day.  The implementations may have temporary
   lists, but this can possibly be later optimized out.

5. I'm going to make a sincere attempt to not use abbreviations in any API names.  'ID' is okay, but
   just about everything else ends up only making things more confusing.


Known Restrictions:
-------------------
+ Appointments can not be scheduled in increments finer than seconds.  Seriously, seconds might be
  excessive as I can't think of anyone who has ever scheduled anything in real life (not on a
  computer) at a particular second.

+ Appointments can not span multiple days.  This would probably be a nice feature some day but I'm not
  even planning for it now.


To-do Before Release:
---------------------
+ Need to have the panel redraw on an update to the model.

+ Need to automatically detect unassigned appointments and add an unassigned column.


Version 2.0 Features:
---------------------
+ Drag and Drop of appointments to move them around in a day, or across schedules.

+ Add week view.  This would allow dragging appointments around and resources around on given days.

+ Add month view.  This would convey information about what resources where scheduled to be available
  on which days.  For each resource it might be nice to show percentage of availability.  Like resource
  1 is 50% booked on the 5th of November.

+ Allow per-resource scheduling in the day.  In other words, resource 1 could be available
  from 8am - 1pm and resource 2 from 12pm - 5pm.

+ Related to the last feature, it might be nice to be able to block out portions of the day.
  Like simply say lunch is from 12-1 ... always, so block it out.